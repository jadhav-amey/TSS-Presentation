name: Kubernetes Deployment Terraform

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Lint Terraform
        run: terraform fmt -check

      - name: Initialize Terraform
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan.tfstate

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan.tfstate

  kubernetes:
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Kubernetes CLI
        uses: azure/setup-kubectl@v3
        with:
          version: latest

      - name: Update Kubeconfig
        run: |
          echo "Updating kubeconfig for cluster: $CLUSTER_NAME"
          aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION

      - name: Verify Cluster Access
        run: |
          echo "Verifying Kubernetes cluster access..."
          kubectl cluster-info
          kubectl get nodes

      - name: Lint Kubernetes Manifests
        run: |
          kubeval manifest/configmap.yml
          kubeval manifest/deployment.yml
          kubeval manifest/service.yml

      - name: Apply Kubernetes Manifests
        run: |
          echo "Deploying Kubernetes manifests..."
          kubectl apply -f manifest/configmap.yml
          kubectl apply -f manifest/deployment.yml
          kubectl apply -f manifest/service.yml
