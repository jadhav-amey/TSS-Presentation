name: Kubernetes Deployment Terraform

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: latest # Terraform version

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Initialize Terraform
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Get EKS Cluster Name
        run: |
          CLUSTER_NAME=$(terraform output -raw cluster_name 2>/dev/null || echo "not_found")
          echo "EKS_CLUSTER_NAME=$CLUSTER_NAME" >> $GITHUB_ENV
          if [[ "$CLUSTER_NAME" == "not_found" ]]; then
            echo "‚ùå EKS cluster name not found! Check Terraform state."
            exit 1
          fi

  kubernetes:
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v1
        with:
          version: latest # Kubernetes version

      - name: Update Kubeconfig
        run: |
          echo "Updating kubeconfig for cluster: $EKS_CLUSTER_NAME"
          aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region ${{ secrets.AWS_REGION }}

      - name: Verify Cluster Access
        run: kubectl get nodes

      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f manifest/configmap.yml
          kubectl apply -f manifest/deployment.yml
          kubectl apply -f manifest/service.yml
